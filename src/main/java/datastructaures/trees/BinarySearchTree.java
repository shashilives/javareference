package datastructaures.trees;public class BinarySearchTree {    Node root;    public BinarySearchTree(Node root) {        this.root = root;    }    public BinarySearchTree insert(int value) throws Exception {        Node newNode = new Node(value);        if (this.root == null) {            this.root = newNode;            return this;        }        Node current = this.root;        while (true) {            if (value == current.value) {                throw new Exception("Duplicate Values entered");            }            if (value < current.value) {                if (current.left == null) {                    current.left = newNode;                    return this;                }                current = current.left;            } else {                if (current.right == null) {                    current.right = newNode;                    return this;                }                current = current.right;            }        }    }    public boolean contains(int value) {        if (root == null) {            System.out.println("BST is empty");        }        Node current = this.root;        while (current != null) {            if (value < current.value) {                current = current.left;            } else if (value > current.value) {                current = current.right;            } else {                return true;            }        }        return false;    }}