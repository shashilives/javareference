package datastructaures.sll;import java.util.ArrayList;import java.util.List;public class SLLTest {    public static void main(String[] args) {        SinglyLinkedList<Integer> sll = new SinglyLinkedList<>();        performPushOperation(sll);        //peroformRemoveOperation(sll);        performShiftOperation(sll);        performUnshiftOperation(sll);        performGETOperation(sll, 0);        performInsertOperation(sll, 1, 9);        performReverseOp(sll);    }    private static void performReverseOp(SinglyLinkedList<Integer> sll) {        System.out.println("\nReverse operation ");        sll.reverse(sll);        System.out.println(sll.head);    }    private static void performInsertOperation(SinglyLinkedList sll, int pos, int value) {        System.out.println("\n Insert  Operation  pos : " + pos);        sll.insert(pos, value);        System.out.println(sll.head);    }    private static void performGETOperation(SinglyLinkedList sll, int pos) {        Node node = sll.get(pos);        System.out.println("\n GET  Operation  pos : " + pos);        System.out.println(sll.head);    }    private static void performUnshiftOperation(SinglyLinkedList<Integer> sll) {        System.out.println("\nUnShift Operation");        sll.unshift(4);        System.out.println(sll.head);    }    private static void performShiftOperation(SinglyLinkedList<Integer> sll) {        System.out.println("\nShift Operation");        sll.shift();        System.out.println(sll.head);    }    private static void peroformRemoveOperation(SinglyLinkedList<Integer> sll) {        System.out.println("\nRemove Operation");        sll.remove();        System.out.println(sll.head);    }    private static void performPushOperation(SinglyLinkedList sll) {        System.out.println("\nPush Operation");        sll.push(1);        sll.push(2);        sll.push(3);        System.out.println(sll.head);    }    private static void printSll(SinglyLinkedList sll) {        List<Integer> sllList = new ArrayList<>();        for (int i = 0; i < sll.lenght; i++) {            // sllList.add(sll.)        }    }}