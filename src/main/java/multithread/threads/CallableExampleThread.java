package multithread.threads;import java.util.concurrent.Callable;import java.util.concurrent.ExecutionException;import java.util.concurrent.FutureTask;public class CallableExampleThread {    public static void main(String[] args) throws ExecutionException, InterruptedException {        Callable callable = new CallableExample() ;        FutureTask futureTask = new FutureTask(callable);        Thread t1 = new Thread(futureTask);        t1.start();        Callable callable2 = new CallableExample() ;        FutureTask futureTask2 = new FutureTask(callable2);        Thread t2 = new Thread(futureTask2);        t2.start();        System.out.println(futureTask.get());        System.out.println("btw the tasks");        System.out.println(futureTask2.get());    }    static class CallableExample implements Callable {        @Override        public Object call() throws Exception {            System.out.println("inside CallableExample  impl " + Thread.currentThread().getName());            for (int i = 1; i < 100; i++) {                System.out.println(Thread.currentThread().getName() + " - " + i);            }            return true;        }    }}