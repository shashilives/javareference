package designpatterns.solid.o.latest;import designpatterns.solid.o.Color;import designpatterns.solid.o.Product;import designpatterns.solid.o.Size;import java.util.Arrays;import java.util.List;// To achive the same that was discussed in the Old Way - we are gng to break down certain things// 1 interface -- Filter interface with method filter// 1 interface -- Specification - which has a method isSatisfied -- where the product will be evaluated// against a conditions like Size and Colorpublic class OPrinciple {    public static void main(String[] args) {        Product p1 = new Product("House", Color.RED, Size.LARGE);        Product p2 = new Product("Shoe", Color.YELLOW, Size.MEDIUM);        Product p3 = new Product("Bike", Color.GREEN, Size.LARGE);        Product p4 = new Product("Rose", Color.RED, Size.SMALL);        List<Product> productList = Arrays.asList(p1, p2, p3, p4);        ProductFilter pf = new ProductFilter();        ColorSpecification cs = new ColorSpecification(Color.GREEN);        SizeSpecification ss = new SizeSpecification(Size.LARGE);        System.out.println(" Color.GREEN");        pf.filter(productList, cs).forEach(System.out::println);        System.out.println(" Size.LARGE");        pf.filter(productList, ss).forEach(System.out::println);        System.out.println(" Color.GREEN --- Size.LARGE");        pf.filter(productList, new AndSpecification(cs,ss)).forEach(System.out::println);    }}