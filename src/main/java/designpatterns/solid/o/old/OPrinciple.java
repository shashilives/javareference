package designpatterns.solid.o.old;import designpatterns.solid.o.Color;import designpatterns.solid.o.Product;import designpatterns.solid.o.Size;import java.util.Arrays;import java.util.List;// O- Open for extension but closed for modification// Let us take an example - where we will have to filter list of products by a given color// later we feel we shd filter by size// again later we fell we shd filter by both size and color// When the requirement keeps changing we keep modifying our filter class with updated conditions// thus breaking this principlepublic class OPrinciple {    public static void main(String[] args) {        Product p1 = new Product("House", Color.RED, Size.LARGE);        Product p2 = new Product("Shoe", Color.YELLOW, Size.MEDIUM);        Product p3 = new Product("Bike", Color.GREEN, Size.LARGE);        Product p4 = new Product("Rose", Color.RED, Size.SMALL);        List<Product> productList = Arrays.asList(p1, p2, p3, p4);        System.out.println(" Color.GREEN --- Size.LARGE");        new ProductFilter().filter(productList, Color.GREEN, Size.LARGE).forEach(System.out::println);        System.out.println(" --- Color.RED");        new ProductFilter().filter(productList, Color.RED).forEach(System.out::println);    }}