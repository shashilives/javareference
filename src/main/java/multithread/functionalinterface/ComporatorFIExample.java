package multithread.functionalinterface;import java.util.ArrayList;import java.util.Collections;import java.util.Comparator;import java.util.List;public class ComporatorFIExample {    public static void main(String[] args) {        Comparator<User> comparatorClassicStyle = new Comparator<User>() {            @Override            public int compare(User o1, User o2) {                return o1.id - o2.id;            }        };        Comparator<User> comparatorLatestStyle = (u1, u2) -> u1.name.compareTo(u2.name);        List<User> userList = new ArrayList<>();        userList.add(new User(10, "Z"));        userList.add(new User(1, "B"));        userList.add(new User(2, "A"));        Collections.sort(userList, comparatorClassicStyle);        userList.forEach(System.out::println);    }    static class User {        int id;        String name;        public User(int id, String name) {            this.id = id;            this.name = name;        }        @Override        public String toString() {            return "User{" +                    "id='" + id + '\'' +                    ", name='" + name + '\'' +                    '}';        }    }}